<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Target Name="MyILRepack" AfterTargets="Build" Condition="$(Configuration.Contains('Release'))">
    <ItemGroup>
      <InputAssemblies Include="$(OutputPath)$(TargetName)$(TargetExt)" />

      <InputAssemblies Include="$(OutputPath)*.dll" />
    </ItemGroup>

    <!-- Need to internalize, which allows ILRepack to rename duplicate types like System.Runtime.CompilerServices.IsExternalInit (from both Unfucked and System.Text.Json) -->
    <ILRepack
        Parallel="true"
        Internalize="true"
        AllowDuplicateResources="false"
        InputAssemblies="@(InputAssemblies)"
        TargetKind="SameAsPrimaryAssembly"
        OutputFile="$(OutputPath)\repacked\$(TargetName)$(TargetExt)" />

    <Copy
        SourceFiles="$(OutputPath)\configuration.json;$(OutputPath)\NLog.config;$(OutputPath)\Install service.ps1"
        DestinationFolder="$(OutputPath)\repacked\" />
          
  </Target>

  <!--<Target
    AfterTargets="MyILRepack"
    Name="MyCleanReferenceCopyLocalPaths"
    Condition="$(Configuration.Contains('Release')) and '$(ClearOutputDirectory)' != 'False'">
    <Delete Files="@(ReferenceCopyLocalPaths->'$(OutDir)%(DestinationSubDirectory)%(Filename)%(Extension)')" />
    <ItemGroup>
      <Directories Include="$([System.IO.Directory]::GetDirectories('$(OutDir)%(DestinationSubDirectory)', '*', System.IO.SearchOption.AllDirectories))" />
      <Directories>
        <Files>$([System.IO.Directory]::GetFiles("%(Directories.Identity)", "*", System.IO.SearchOption.AllDirectories).get_Length())</Files>
      </Directories>
    </ItemGroup>
    <RemoveDir Directories="@(Directories)" Condition="%(Files)=='0'" />
  </Target>-->
</Project>